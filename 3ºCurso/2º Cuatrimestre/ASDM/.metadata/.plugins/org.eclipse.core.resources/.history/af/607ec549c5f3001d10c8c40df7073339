package Asdm.diagram.providers;

/**
 * @generated
 */
public class AsdmElementTypes {

		/**
 * @generated
 */
private AsdmElementTypes() {
}
	
		/**
 * @generated
 */
private static java.util.Map<org.eclipse.gmf.runtime.emf.type.core.IElementType, org.eclipse.emf.ecore.ENamedElement> elements;

	/**
 * @generated
 */
private static org.eclipse.gmf.tooling.runtime.providers.DiagramElementTypeImages elementTypeImages = new org.eclipse.gmf.tooling.runtime.providers.DiagramElementTypeImages(	Asdm.diagram.part.AsdmDiagramEditorPlugin.getInstance().getItemProvidersAdapterFactory());

	/**
 * @generated
 */
private static java.util.Set<org.eclipse.gmf.runtime.emf.type.core.IElementType> KNOWN_ELEMENT_TYPES;
	
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType Diagrama_1000 = getElementType("Asdm.diagram.Diagrama_1000");  //$NON-NLS-1$
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType Actividad_2001 = getElementType("Asdm.diagram.Actividad_2001");  //$NON-NLS-1$
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType Decision_2002 = getElementType("Asdm.diagram.Decision_2002");  //$NON-NLS-1$
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType Ramificacion_2003 = getElementType("Asdm.diagram.Ramificacion_2003");  //$NON-NLS-1$
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType NodoInicial_2004 = getElementType("Asdm.diagram.NodoInicial_2004");  //$NON-NLS-1$
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType NodoFinal_2005 = getElementType("Asdm.diagram.NodoFinal_2005");  //$NON-NLS-1$
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType Actividad_3001 = getElementType("Asdm.diagram.Actividad_3001");  //$NON-NLS-1$
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType Decision_3002 = getElementType("Asdm.diagram.Decision_3002");  //$NON-NLS-1$
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType Ramificacion_3003 = getElementType("Asdm.diagram.Ramificacion_3003");  //$NON-NLS-1$
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType NodoInicial_3004 = getElementType("Asdm.diagram.NodoInicial_3004");  //$NON-NLS-1$
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType NodoFinal_3005 = getElementType("Asdm.diagram.NodoFinal_3005");  //$NON-NLS-1$
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType Arista_4001 = getElementType("Asdm.diagram.Arista_4001");  //$NON-NLS-1$
		
		/**
 * @generated
 */
public static org.eclipse.jface.resource.ImageDescriptor getImageDescriptor(org.eclipse.emf.ecore.ENamedElement element) {
	return elementTypeImages.getImageDescriptor(element);
}

		/**
 * @generated
 */
public static org.eclipse.swt.graphics.Image getImage(org.eclipse.emf.ecore.ENamedElement element) {
	return elementTypeImages.getImage(element);
}

		/**
 * @generated
 */
public static org.eclipse.jface.resource.ImageDescriptor getImageDescriptor(org.eclipse.core.runtime.IAdaptable hint) {
	return getImageDescriptor(getElement(hint));
}

		/**
 * @generated
 */
public static org.eclipse.swt.graphics.Image getImage(org.eclipse.core.runtime.IAdaptable hint) {
	return getImage(getElement(hint));
}

		/**
 * Returns 'type' of the ecore object associated with the hint.
 * 
 * @generated
 */
public static org.eclipse.emf.ecore.ENamedElement getElement(org.eclipse.core.runtime.IAdaptable hint) {
	Object type = hint.getAdapter(org.eclipse.gmf.runtime.emf.type.core.IElementType.class);
	if (elements == null) {
		elements = new java.util.IdentityHashMap<org.eclipse.gmf.runtime.emf.type.core.IElementType, org.eclipse.emf.ecore.ENamedElement>();
		
	elements.put(Diagrama_1000, Asdm.AsdmPackage.eINSTANCE.getDiagrama());
					
	
	elements.put(Actividad_2001, Asdm.AsdmPackage.eINSTANCE.getActividad());
					
	
	elements.put(Decision_2002, Asdm.AsdmPackage.eINSTANCE.getDecision());
					
	
	elements.put(Ramificacion_2003, Asdm.AsdmPackage.eINSTANCE.getRamificacion());
					
	
	elements.put(NodoInicial_2004, Asdm.AsdmPackage.eINSTANCE.getNodoInicial());
					
	
	elements.put(NodoFinal_2005, Asdm.AsdmPackage.eINSTANCE.getNodoFinal());
					
	
	elements.put(Actividad_3001, Asdm.AsdmPackage.eINSTANCE.getActividad());
					
	
	elements.put(Decision_3002, Asdm.AsdmPackage.eINSTANCE.getDecision());
					
	
	elements.put(Ramificacion_3003, Asdm.AsdmPackage.eINSTANCE.getRamificacion());
					
	
	elements.put(NodoInicial_3004, Asdm.AsdmPackage.eINSTANCE.getNodoInicial());
					
	
	elements.put(NodoFinal_3005, Asdm.AsdmPackage.eINSTANCE.getNodoFinal());
							
	
	elements.put(Arista_4001, Asdm.AsdmPackage.eINSTANCE.getArista());
			}
	return (org.eclipse.emf.ecore.ENamedElement) elements.get(type);
}

		/**
 * @generated
 */
private static org.eclipse.gmf.runtime.emf.type.core.IElementType getElementType(String id) {
	return org.eclipse.gmf.runtime.emf.type.core.ElementTypeRegistry.getInstance().getType(id);
}

		/**
 * @generated
 */
public static boolean isKnownElementType(org.eclipse.gmf.runtime.emf.type.core.IElementType elementType) {
	if (KNOWN_ELEMENT_TYPES == null) {
		KNOWN_ELEMENT_TYPES = new java.util.HashSet<org.eclipse.gmf.runtime.emf.type.core.IElementType>();
			KNOWN_ELEMENT_TYPES.add(Diagrama_1000);
		KNOWN_ELEMENT_TYPES.add(Actividad_2001);
		KNOWN_ELEMENT_TYPES.add(Decision_2002);
		KNOWN_ELEMENT_TYPES.add(Ramificacion_2003);
		KNOWN_ELEMENT_TYPES.add(NodoInicial_2004);
		KNOWN_ELEMENT_TYPES.add(NodoFinal_2005);
		KNOWN_ELEMENT_TYPES.add(Actividad_3001);
		KNOWN_ELEMENT_TYPES.add(Decision_3002);
		KNOWN_ELEMENT_TYPES.add(Ramificacion_3003);
		KNOWN_ELEMENT_TYPES.add(NodoInicial_3004);
		KNOWN_ELEMENT_TYPES.add(NodoFinal_3005);
		KNOWN_ELEMENT_TYPES.add(Arista_4001);
		}
	return KNOWN_ELEMENT_TYPES.contains(elementType);
}
	
		/**
 * @generated
 */
	public static org.eclipse.gmf.runtime.emf.type.core.IElementType getElementType(int visualID) {
		switch (visualID) {
				case Asdm.diagram.edit.parts.DiagramaEditPart.VISUAL_ID:		return Diagrama_1000;
	case Asdm.diagram.edit.parts.ActividadEditPart.VISUAL_ID:		return Actividad_2001;
	case Asdm.diagram.edit.parts.DecisionEditPart.VISUAL_ID:		return Decision_2002;
	case Asdm.diagram.edit.parts.RamificacionEditPart.VISUAL_ID:		return Ramificacion_2003;
	case Asdm.diagram.edit.parts.NodoInicialEditPart.VISUAL_ID:		return NodoInicial_2004;
	case Asdm.diagram.edit.parts.NodoFinalEditPart.VISUAL_ID:		return NodoFinal_2005;
	case Asdm.diagram.edit.parts.Actividad2EditPart.VISUAL_ID:		return Actividad_3001;
	case Asdm.diagram.edit.parts.Decision2EditPart.VISUAL_ID:		return Decision_3002;
	case Asdm.diagram.edit.parts.Ramificacion2EditPart.VISUAL_ID:		return Ramificacion_3003;
	case Asdm.diagram.edit.parts.NodoInicial2EditPart.VISUAL_ID:		return NodoInicial_3004;
	case Asdm.diagram.edit.parts.NodoFinal2EditPart.VISUAL_ID:		return NodoFinal_3005;
	case Asdm.diagram.edit.parts.AristaEditPart.VISUAL_ID:		return Arista_4001;
		}
		return null;
	}
	
		/**
 * @generated
 */
	public static final org.eclipse.gmf.tooling.runtime.providers.DiagramElementTypes TYPED_INSTANCE 
		= new org.eclipse.gmf.tooling.runtime.providers.DiagramElementTypes(elementTypeImages) {
		
		/**
 * @generated
 */
		@Override

		public boolean isKnownElementType(org.eclipse.gmf.runtime.emf.type.core.IElementType elementType) {
			return Asdm.diagram.providers.AsdmElementTypes.isKnownElementType(elementType);
		}
		
		/**
 * @generated
 */
		@Override

		public org.eclipse.gmf.runtime.emf.type.core.IElementType getElementTypeForVisualId(int visualID) {
			return Asdm.diagram.providers.AsdmElementTypes.getElementType(visualID);
		}
		
		/**
 * @generated
 */
		@Override

		public org.eclipse.emf.ecore.ENamedElement getDefiningNamedElement(org.eclipse.core.runtime.IAdaptable elementTypeAdapter) {
			return Asdm.diagram.providers.AsdmElementTypes.getElement(elementTypeAdapter);
		}
	}; 

	}
