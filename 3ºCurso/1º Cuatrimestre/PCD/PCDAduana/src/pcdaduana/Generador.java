/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/AWTForms/Frame.java to edit this template
 */
package pcdaduana;

import java.util.concurrent.Semaphore;

/**
 *
 * @author usuario
 */
public class Generador extends java.awt.Frame {

    /**
     * Creates new form Generador
     */
    public Generador() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Exit the Application
     */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws InterruptedException {
        Generador Frame=new Generador();                    //Creamos un nuevo jFrame de AWT
        CanvasAduana canvas=new CanvasAduana();             //Creamos nuestro Canvas que pasaremos por parametro a los hilos
        Frame.setSize(800, 600);                            //Elegimos el tamoaño de nuestro frame
        
        Frame.add(canvas);                                  //Añadimos el objeto canvas al frame
        Frame.setVisible(true);                             //Mostramos el Frame 
        
        Semaphore cuidador=new Semaphore(0);            //Creamos  todos los semaforos aqui
        Semaphore perro=new Semaphore(2);               //para pasarlos por parametros a los hilos
        Semaphore rayomano=new Semaphore(1);
        Semaphore rayomaleta=new Semaphore(2);
        
        Thread[] Personas = new Thread[10];
        Thread cuidaPerr=new Cuidador(cuidador, perro, canvas);
        cuidaPerr.start();
        for (int i = 0; i < 10; i++) {
            int numero_random = (int) (Math.random() * (100 - 0 + 1) );
            if (numero_random < 70) Personas[i] = new ViajeroMaleta(cuidador, perro, rayomaleta, canvas);
            else Personas[i] = new Thread(new ViajeroMano(cuidador, perro, rayomano, canvas));
            Personas[i].start();
        }
        for (int i = 0; i < 10; i++) {
            Personas[i].join();
        }
        
        cuidaPerr.interrupt();
        Thread.sleep(10000000);
        System.exit(0);

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
